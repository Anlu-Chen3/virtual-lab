[
    {
        "agent": "User",
        "message": "This is the beginning of an individual meeting with Medicinal Chemist to discuss your research project.\n\nHere is context for this meeting:\n\n[begin context 1]\n\nExperimentThermalShift[Samples]\u27f9Protocol\ncreates a Protocol object for measuring sample fluorescence during heating and cooling (melting curve analysis) to determine shifts in thermal stability of Samples under varying conditions.\n\nExperimentThermalShift quantifies alterations in molecular structure through changes in fluorescence emission across a temperature gradient. This assay utilizes either extrinsic fluorescent dyes or intrinsic fluorescence to monitor conformational changes in nucleic acids or proteins. Additionally, sample aggregate formation across a temperature gradient can be measured using static light scattering whereby larger molecules scatter more light. The data generated by this experiment can be used to determine the samples\u2019 melting point or aggregation point which is characteristic of the samples\u2019 sequence, length, concentration, and solvent conditions. Resulting shifts in melting and aggregation points compared to a reference are indicative of sample thermal stability under varying conditions.\n\nExperimental Principles\nFigure 1.1: Step1: Samples can be diluted, pooled, mixed, incubated, and/or annealed in preparation for thermal shift analysis. Sample dilution occurs prior to sample pooling. When all samples in a pool are diluted, the total number of dilutions of each sample in the pool must match. When one sample in a pool is diluted and its partner is not diluted, the undiluted pooling partner will be pooled with each dilution of its partner at the desired AliquotAmount. Step2: Prepared samples are transferred into instrument compatible containers. For the Uncle multimode spectrophotometer, samples are loaded into a 16 well quartz capillary strip. For the ViiA 7 Real-Time thermocycler, samples are loaded into a 384-well v-bottom optical assay plate. Step3: Prepared samples are loaded into the instrument and equilibrated to the starting temperature of the following thermal ramp. A total of three capillary strips can be loaded into the Uncle at once. Step4: Sample fluorescence (and static light scattering if desired) measurement during thermal ramp. For the Uncle, fluorescence and static light scattering are measured for each capillary independently. For the ViiA 7, fluorescence measurements are collected at each excitation wavelength simultaneously for all wells. Steps 3 & 4 are repeated for each heating and cooling cycle. Step5: Data is assessed using AnalyzeMeltingPoint to determine the melting temperature of samples. Static light scattering data from the Uncle can also be analyzed to determine relative changes in aggregation temperature of samples.\n\nInstrumentation\nUncle\nModel[Instrument, MultimodeSpectrophotometer, \"id:4pO6dM508MbX\"]\nFigure 2.1.1: The Uncle is a multimode spectrophotometer with the capacity to interrogate forty eight samples in one run. Samples must be assayed in Uncle compatible capillary strips. Each strip contains 16 quartz capillaries and each capillary requires 9 uL of sample. Sample fluorescence and static light scattering intensity are excited by 266 nm and 473 nm long-life lasers and detected by a full-spectrum spectrometer consisting of a CCD camera pixel array. Excitation laser power can be specified from opaque to full power (0 - 100% respectively). Sample dynamic light scattering can be quantified by a 660 nm laser diode and detected using an avalanche photodiode module. For all measurements, each capillary is interrogated independently. Thermal profiles can be programmed into the instrument to interrogate samples at multiple temperatures. Capillary strip temperature is controlled by a thermoelectric heating and cooling plate and can range from 15\u00b0C to 95\u00b0C.\nViiA 7\nModel[Instrument, Thermocycler, \"id:D8KAEvdqzXYk\"]\nFigure 2.2.1: The ViiA 7 offers real-time monitoring of target sequence amplification during 384-well plate-based PCR procedures. The thermocycling profile is programmable in the temperature range from 4 \u00b0C to 100 \u00b0C, with a maximum ramp rate of 3.4 \u00b0C/sec. The ViiA 7's excitation wavelengths of 470, 520, 550, 580, 640, and 662 nm and emission wavelengths of 520, 558, 586, 623, 682, and 711 nm allow monitoring of the amplification targets via a variety of dyes or reporters.\n\nExperiment Options\nGeneral\nInstrument\nThe instrument used to perform the thermal shift experiment.\nDefault Value: Automatic\nDefault Calculation: Automatically set to Model[Instrument, Thermocycler, \"ViiA 7\"] or Model[Instrument, Thermocycler, \"QuantStudio 7 Flex\"] for nucleic acid samples and Model[Instrument, MultimodeSpectrophotometer, \"Uncle\"] for protein samples\nPattern Description: An object of type or subtype Model[Instrument, Thermocycler], Object[Instrument, Thermocycler], Model[Instrument, MultimodeSpectrophotometer], or Object[Instrument, MultimodeSpectrophotometer]\nProgrammatic Pattern: ObjectP[{Model[Instrument, Thermocycler], Object[Instrument, Thermocycler], Model[Instrument, MultimodeSpectrophotometer], Object[Instrument, MultimodeSpectrophotometer]}] | Automatic\nNumberOfReplicates\nThe number of different analysis wells in which each nested index matching sample is measured.\nDefault Value: Automatic\nDefault Calculation: Automatically set to 2 if Instrument is set to a Model[Instrument, MultimodeSpectrophotometer] or Object[Instrument, MultimodeSpectrophotometer].\nPattern Description: Greater than or equal to 2 in increments of 1 or Null.\nProgrammatic Pattern: (GreaterEqualP[2, 1] | Automatic) | Null\nAnalyteType\nThe type of molecule present in the nested index matching sample that is detected during instrument measurement.\nDefault Value: Automatic\nDefault Calculation: Automatically set to the type of specified analytes in the sample definition.\nPattern Description: Oligomer or Protein.\nProgrammatic Pattern: (Oligomer | Protein) | Automatic\nIndex Matches to: experiment samples\nDynamicLightScatteringCapillaryLoading\nThe loading method for capillaries when the instrument used is Model[Instrument, MultimodeSpectrophotometer, \"Uncle\"] . When set to Robotic, capillaries are loaded by liquid handler. when set to Manual, capillaries are loaded by a multichannel pipette.\nDefault Value: Automatic\nDefault Calculation: If Automatic, set to Manual if the instrument is Model[Instrument, MultimodeSpectrophotometer, \"Uncle\"] and to Null otherwise.\nPattern Description: Automatic, Robotic, or Manual or Null.\nProgrammatic Pattern: ((Automatic | Robotic | Manual) | Automatic) | Null\nSample Preparation\nReactionVolume\nThe total volume of the reaction including the sample, Buffer, DetectionReagent, and PassiveReference. For protocols using Model[Instrument,MultimodeSpectrophotometer], a minimum of 20 Microliter for the ReactionVolume is required.\nDefault Value: Automatic\nPattern Description: Greater than or equal to 5 microliters and less than or equal to 40 microliters.\nProgrammatic Pattern: RangeP[5*Microliter, 40*Microliter] | Automatic\nPassiveReference\nA temperature insensitive fluorophore used to normalize melting curves.\nDefault Value: Null\nPattern Description: An object of type or subtype Model[Sample] or Object[Sample] or a prepared sample or Null.\nProgrammatic Pattern: (ObjectP[{Model[Sample], Object[Sample]}] | _String) | Null\nPassiveReferenceVolume\nThe volume of PassiveReference to add to the final reaction.\nDefault Value: Automatic\nDefault Calculation: Automatically set to the manufacturer recommended working concentration of the selected passive reference dye or Null if PassiveReference is not specified.\nPattern Description: Greater than 0 microliters or Null.\nProgrammatic Pattern: (GreaterP[0*Microliter] | Automatic) | Null\nDilutionCurve\nThe collection of dilutions that are performed on sample prior to sample pooling (if desired) and thermal ramping.\nFigure 3.1: Use the DilutionCurve option to create a collection of dilutions that will be performed on the sample.\nDefault Value: Null\nPattern Description: Fixed Dilution Factor or Fixed Dilution Volume or Null.\nProgrammatic Pattern: (Null | {{GreaterEqualP[0*Microliter], GreaterEqualP[0*Microliter]}..} | {{GreaterEqualP[0*Microliter], RangeP[0, 1]}..}) | Null\nIndex Matches to: experiment samples\nNested Index Matches to: experiment samples\nSerialDilutionCurve\nThe collection of dilutions that are performed on sample prior to sample pooling (if desired) and thermal ramping. For Serial Dilution Volumes, the Transfer Volume is taken out of the sample and added to a second well with the Diluent Volume of the Diluent. It is mixed and then the Transfer Volume is taken out of that well to be added to a third well. This is repeated to make Number Of Dilutions diluted samples. For example, 100mM sample with a TransferVolume of 20 Microliters, a DiluentVolume of 60 Microliters and a NumberofDilutions of 3 is used, it will create a DilutionCurve of 100mM, 25mM, and 6.25mM with each dilution having a volume of 60 Microliters. For Serial Dilution Factors, the sample is diluted by the dilution factor at each transfer step.\nFigure 3.2: Use the SerialDilutionCurve option to create a collection of serial dilutions that will be performed on the sample.\nDefault Value: Null\nPattern Description: Serial Dilution Factor or Serial Dilution Volumes or Null.\nProgrammatic Pattern: (Null | {GreaterP[0*Microliter], GreaterEqualP[0*Microliter], GreaterP[1, 1]} | {GreaterEqualP[0*Microliter], {RangeP[0, 1], GreaterP[1, 1]} | {RangeP[0, 1]..}}) | Null\nIndex Matches to: experiment samples\nNested Index Matches to: experiment samples\nDiluent\nThe sample that is used to dilute the sample to make a DilutionCurve or SerialDilutionCurve.\nDefault Value: Automatic\nDefault Calculation: Automatically set to Model[Sample,\"Nuclease-free Water\"] for nucleic acid analytes and Model[Sample,StockSolution,\"1x PBS from 10X stock, pH 7\"] for protein analytes when SerialDilutionCurve or DilutionCurve are specified and Null when neither SerialDilutionCurve or DilutionCurve are specified.\nPattern Description: An object of type or subtype Model[Sample] or Object[Sample] or a prepared sample or Null.\nProgrammatic Pattern: ((Null | (ObjectP[{Model[Sample], Object[Sample]}] | _String)) | Automatic) | Null\nIndex Matches to: experiment samples\nNested Index Matches to: experiment samples\nDilutionContainer\nThe containers in which each sample is diluted with the Diluent to make the concentration series, with indices indicating specific grouping of samples if desired.\nDefault Value: Automatic\nDefault Calculation: Automatically set as {1,Model[Container,Plate,\"96-well 2mL Deep Well Plate\"]}.\nPattern Description: {Index, Container} or Null.\nProgrammatic Pattern: ((Null | {GreaterEqualP[1, 1], ObjectP[{Model[Container], Object[Container]}] | _String}) | Automatic) | Null\nIndex Matches to: experiment samples\nNested Index Matches to: experiment samples\nDilutionStorageCondition\nThe conditions under which any leftover samples from the DilutionCurve or SerialDilutionCurve should be stored after the samples are transferred to the measurement plate.\nDefault Value: Automatic\nDefault Calculation: Automatically set to Disposal.\nPattern Description: {AmbientStorage, Refrigerator, Freezer, DeepFreezer, CryogenicStorage, YeastIncubation, YeastShakingIncubation, BacterialIncubation, BacterialShakingIncubation, MammalianIncubation, ViralIncubation, CrystalIncubation, AcceleratedTesting, IntermediateTesting, LongTermTesting, UVVisLightTesting} or Disposal or Null.\nProgrammatic Pattern: ((Alternatives[SampleStorageTypeP | Disposal]) | Automatic) | Null\nIndex Matches to: experiment samples\nNested Index Matches to: experiment samples\nDilutionMixVolume\nThe volume that is pipetted out of and in to the dilution to mix the sample with the Diluent to make the DilutionCurve or SerialDilutionCurve.\nDefault Value: Automatic\nDefault Calculation: Automatically set to the smallest dilution volume or half the largest dilution volume, whichever one is smaller.\nPattern Description: Greater than or equal to 0 microliters or Null.\nProgrammatic Pattern: ((Null | GreaterEqualP[0*Microliter]) | Automatic) | Null\nIndex Matches to: experiment samples\nNested Index Matches to: experiment samples\nDilutionNumberOfMixes\nThe number of pipette out and in cycles that is used to mix the sample with the Diluent to make the DilutionCurve or SerialDilutionCurve.\nDefault Value: Automatic\nDefault Calculation: Automatically set to 5 when DilutionCurve or SerialDilutionCurve is specified.\nPattern Description: Greater than or equal to 0 and less than or equal to 20 in increments of 1 or Null.\nProgrammatic Pattern: ((Null | RangeP[0, 20, 1]) | Automatic) | Null\nIndex Matches to: experiment samples\nNested Index Matches to: experiment samples\nDilutionMixRate\nThe speed at which the DilutionMixVolume is pipetted out and in of the dilution to mix the sample with the Diluent to make the DilutionCurve or SerialDilutionCurve.\nDefault Value: Automatic\nDefault Calculation: Automatically set to 100 Microliter/Second when DilutionCurve or SerialDilutionCurve is specified.\nPattern Description: Greater than or equal to 0.4 microliters per second and less than or equal to 250 microliters per second or Null.\nProgrammatic Pattern: ((Null | RangeP[0.4*(Microliter/Second), 250*(Microliter/Second)]) | Automatic) | Null\nIndex Matches to: experiment samples\nNested Index Matches to: experiment samples\nNestedIndexMatchingMix\nIndicates if mixing of the nested index matching samples occur inside the destination plate.\nDefault Value: Automatic\nDefault Calculation: Automatically set based on whether pooling of the source samples is performed.\nPattern Description: True or False or Null.\nProgrammatic Pattern: (BooleanP | Automatic) | Null\nIndex Matches to: experiment samples\nNestedIndexMatchingMixType\nIndicates the style of motion used to mix the nested index matching samples inside the AliquotContainer.\nDefault Value: Automatic\nDefault Calculation: Automatically set to Pipette when NestedIndexMatchingMix is True.\nPattern Description: Pipette or Invert or Null.\nProgrammatic Pattern: ((Pipette | Invert) | Automatic) | Null\nIndex Matches to: experiment samples\nNestedIndexMatchingNumberOfMixes\nThe number of times each nested index matching sample is mixed by pipetting or inversion.\nDefault Value: Automatic\nDefault Calculation: Automatically set to 5.\nPattern Description: Greater than or equal to 1 and less than or equal to 50 in increments of 1 or Null.\nProgrammatic Pattern: (RangeP[1, 50, 1] | Automatic) | Null\nIndex Matches to: experiment samples\nNestedIndexMatchingMixVolume\nThe volume of each nested index matching sample is pipetted up and down to mix.\nDefault Value: Automatic\nDefault Calculation: Automatically set to half the total nested index matching volume.\nPattern Description: Greater than or equal to 1 microliter and less than or equal to 50 milliliters or Null.\nProgrammatic Pattern: (RangeP[1*Microliter, 50*Milliliter] | Automatic) | Null\nIndex Matches to: experiment samples\nNestedIndexMatchingIncubate\nIndicates if thermal incubation of the nested index matching samples occur prior to measurement.\nDefault Value: Automatic\nDefault Calculation: Automatically set to False if NestedIndexMatchingIncubationTime, NestedIndexMatchingIncubationTemperature, and NestedIndexMatchingAnnealingTime are not specified. Automatically set to True if either NestedIndexMatchingIncubationTime, NestedIndexMatchingIncubationTemperature, or NestedIndexMatchingAnnealingTime are specified.\nPattern Description: True or False or Null.\nProgrammatic Pattern: (BooleanP | Automatic) | Null\nIndex Matches to: experiment samples\nPooledIncubationTime\nDuration for which the nested index matching samples are thermally incubated prior to measurement.\nDefault Value: Automatic\nDefault Calculation: Automatically set to Null if NestedIndexMatchingIncubate is False and 5 minutes if NestedIndexMatchingIncubate is True.\nPattern Description: Greater than or equal to 1 minute and less than or equal to 72 hours or Null.\nProgrammatic Pattern: (RangeP[1*Minute, $MaxExperimentTime] | Automatic) | Null\nIndex Matches to: experiment samples\nNestedIndexMatchingIncubationTemperature\nTemperature at which the nested index matching samples are thermally incubated prior to measurement.\nDefault Value: Automatic\nDefault Calculation: Automatically set to Null if NestedIndexMatchingIncubate is False and 85 Celsius if NestedIndexMatchingIncubate is True.\nPattern Description: Ambient or greater than or equal to 22 degrees Celsius and less than or equal to 90 degrees Celsius or Null.\nProgrammatic Pattern: ((RangeP[22*Celsius, 90*Celsius] | Ambient) | Automatic) | Null\nIndex Matches to: experiment samples\nNestedIndexMatchingAnnealingTime\nDuration for which the nested index matching samples remain in the thermal incubation instrument before being removed, allowing the system to settle to room temperature after the NestedIndexMatchingIncubationTime has passed.\nDefault Value: Automatic\nDefault Calculation: Automatically set to Null if NestedIndexMatchingIncubate is False and 3 Hour if NestedIndexMatchingIncubate is True.\nPattern Description: Greater than or equal to 0 minutes and less than or equal to 72 hours or Null.\nProgrammatic Pattern: (RangeP[0*Minute, $MaxExperimentTime] | Automatic) | Null\nIndex Matches to: experiment samples\nSampleVolume\nThe volume of the sample containing the main analyte used in the experiment.\nDefault Value: Automatic\nDefault Calculation: Automatically set to 20uL if the instrument is Model[Instrument,Thermocycler,\"ViiA 7\"] or Model[Instrument, Thermocycler, \"QuantStudio 7 Flex\"] or an object with these models and 10uL if the instrument is Model[Instrument,MultimodeSpectrophotometer,\"Uncle\"] or an object with this model.\nPattern Description: Greater than or equal to 0 microliters and less than or equal to 40 microliters.\nProgrammatic Pattern: RangeP[0*Microliter, 40*Microliter] | Automatic\nIndex Matches to: experiment samples\nBuffer\nA sample used to bring each reaction to its reaction volume once all other components have been added.\nDefault Value: Automatic\nDefault Calculation: Automatically set to Model[Sample,\"Nuclease-free Water\"] for nucleic acid analytes and Model[Sample,StockSolution,\"1x PBS from 10X stock, pH 7\"] for protein analytes.\nPattern Description: An object of type or subtype Model[Sample] or Object[Sample] or a prepared sample or Null.\nProgrammatic Pattern: ((ObjectP[{Model[Sample], Object[Sample]}] | _String) | Automatic) | Null\nIndex Matches to: experiment samples\nBufferVolume\nThe volume, of Buffer added to bring the reaction volume up to ReactionVolume.\nDefault Value: Automatic\nDefault Calculation: Automatically set to the volume difference between the sum of the reaction components and the reaction volume.\nPattern Description: Greater than or equal to 0 microliters and less than or equal to 40 microliters or Null.\nProgrammatic Pattern: (RangeP[0*Microliter, 40*Microliter] | Automatic) | Null\nIndex Matches to: experiment samples\nDetectionReagent\nThe fluorophore or fluorescent dye used to detect melting of the analyte.\nDefault Value: Automatic\nDefault Calculation: Automatically set to Model[Sample, StockSolution, \"10X SYBR Gold in filtered 1X TBE Alternative Preparation\"] for nucleic acid analytes. Automatically set to Model[Sample,StockSolution,\"10X SYPRO Orange\"] for protein analytes if the instrument is Model[Instrument,Thermocycler,\"ViiA 7\"] or Model[Instrument, Thermocycler, \"QuantStudio 7 Flex\"] or an object with these models and Null if the instrument is Model[Instrument,MultimodeSpectrophotometer,\"Uncle\"] or an object with this model.\nPattern Description: An object of type or subtype Object[Sample] or Model[Sample] or a prepared sample or Null.\nProgrammatic Pattern: ((ObjectP[{Object[Sample], Model[Sample]}] | _String) | Automatic) | Null\nIndex Matches to: experiment samples\nDetectionReagentVolume\nThe volume of the DetectionReagent to add to the reaction.\nDefault Value: Automatic\nDefault Calculation: Automatically set to the manufacturer's recommendation for the working concentration of the selected detection reagent. In the case of Model[Sample,StockSolution,\"10X SYPRO Orange\"], the default working concentration is set to 5X.\nPattern Description: Greater than or equal to 0 microliters and less than or equal to 40 microliters or Null.\nProgrammatic Pattern: (RangeP[0*Microliter, 40*Microliter] | Automatic) | Null\nIndex Matches to: experiment samples\nMelting Curve\nMinTemperature\nThe low temperature of the heating or cooling cycle.\nDefault Value: 15 degrees Celsius\nPattern Description: Greater than or equal to 4 degrees Celsius and less than or equal to 100 degrees Celsius.\nProgrammatic Pattern: RangeP[4*Celsius, 100*Celsius]\nMaxTemperature\nThe high temperature of the heating or cooling cycle.\nDefault Value: 95 degrees Celsius\nPattern Description: Greater than or equal to 4 degrees Celsius and less than or equal to 100 degrees Celsius.\nProgrammatic Pattern: RangeP[4*Celsius, 100*Celsius]\nTemperatureRampOrder\nThe order of temperature ramping to be performed in each cycle.\nDefault Value: {Heating, Cooling}\nPattern Description: {Heating, Cooling} or {Cooling, Heating}\nProgrammatic Pattern: ThermodynamicCycleP\nNumberOfCycles\nThe number of repeated melting and cooling cycles to be performed.\nDefault Value: Automatic\nDefault Calculation: Automatically set to 0.5 cycles. Half cycles represent a monotonically ascending or descending temperature ramp and is determined by the first entry in TemperatureRampOrder. More than 0.5 cycles can only be measured on Model[Instrument,MultimodeSpectrophotometer,\"Uncle\"].\nPattern Description: 0.5, 1, 1.5, 2, 2.5, or 3.\nProgrammatic Pattern: (0.5 | 1 | 1.5 | 2 | 2.5 | 3) | Automatic\nEquilibrationTime\nThe time between each melting and cooling cycle during which the samples are held at the starting temperature of the next thermal ramp.\nDefault Value: 1 minute\nPattern Description: Greater than or equal to 0 seconds and less than or equal to 5999 seconds.\nProgrammatic Pattern: RangeP[0*Second, 99*Minute + 59*Second]\nTemperatureRamping\nThe type of temperature ramp. Linear temperature ramps increase temperature at a constant rate given by TemperatureRampRate. Step temperature ramps increase the temperature by TemperatureRampStep/TemperatureRampStepTime and holds the temperature constant for TemperatureRampStepHold before measurement.\nDefault Value: Automatic\nDefault Calculation: Automatically set to Linear if no stepped temperature ramp options are specified. Automatically set to Step if any stepped temperature ramp options are specified.\nPattern Description: Linear or Step.\nProgrammatic Pattern: (Linear | Step) | Automatic\nTemperatureRampRate\nThe rate at which the temperature is changed in the course of one heating and/or cooling cycle.\nDefault Value: Automatic\nDefault Calculation: If TemperatureRamping is Linear, automatically set to 1 Celsius/Minute. If TemperatureRamping is Step, automatically set to the max ramp rate available on the instrument.\nPattern Description: Greater than or equal to 0.0015 degrees Celsius per second and less than or equal to 3.4 degrees Celsius per second.\nProgrammatic Pattern: RangeP[0.0015*(Celsius/Second), 3.4*(Celsius/Second)] | Automatic\nTemperatureResolution\nThe amount by which the temperature is changed between each data point and the subsequent data point for a given sample during the melting and/or cooling curves.\nFigure 3.3: Linear thermal profiles programmed into the ExperimentThermalShift instruments can be customized using the following options: 1) MinTemperature and MaxTemperature set the lower and upper values of the thermal profile respectively and can range from 4 to 100 Celsius. 2) TemperatureRampRate defines the rate at which the temperature changes with time and can range from 0.0015 to 3.4 Celsius per second. 3) EquilibrationTime sets the interval preceding each heating or cooling ramp during which the samples are held at the starting temperature of the heating or cooling ramp. 4) TemperatureResolution determines the change in temperature between measurement reads. The maximum resolution depends on the total number of samples. This option is only available on the Uncle instrument. 5) TemperatureRampOrder sets the order of the heating and cooling ramps and can either start with a heating ramp or a cooling ramp. 6) NumberOfCycles determines how many times the heating and cooling ramps are repeated during the experiment and can range from 0.5 to 3 cycles. The ViiA 7 thermocycler is limited to 0.5 cycles. Each cycle is considered to be a heating ramp plus a cooling ramp in any order.\nDefault Value: Automatic\nDefault Calculation: Automatically set to highest possible resolution if the instrument is Model[Instrument,MultimodeSpectrophotometer,\"Uncle\"] or an object with this model. Automatically set to Null if the instrument is Model[Instrument,Thermocycler,\"ViiA 7\"] or Model[Instrument, Thermocycler, \"QuantStudio 7 Flex\"] or an object with these models because temperature resolution is not tunable on this instrument type.\nPattern Description: Greater than or equal to 0 degrees Celsius and less than or equal to 100 degrees Celsius or Null.\nProgrammatic Pattern: (RangeP[0*Celsius, 100*Celsius] | Automatic) | Null\nNumberOfTemperatureRampSteps\nThe number of step changes in temperature for a heating or cooling cycle.\nFigure 3.4: Step thermal profiles programmed into the ExperimentThermalShift instruments can be customized using the following options: 1) MinTemperature and MaxTemperature set the lower and upper values of the thermal profile respectively and can range from 4 to 100 Celsius. 2) TemperatureRampRate defines the rate at which the temperature changes between each step temperature and can range from 0.0015 to 3.4 Celsius per second. 3) NumberOfTemperatureRampSteps sets the number of temperature steps taken between the MinTemperature and MaxTemperature for each heating or cooling ramp. 4) EquilibrationTime sets the interval preceding each heating or cooling ramp during which the samples are held at the starting temperature of the heating or cooling ramp. 5) StepHoldTime sets the length of time samples are held at each temperature during a stepped temperature ramp prior to measurement. 6) TemperatureRampOrder sets the order of the heating and cooling ramps and can either start with a heating ramp or a cooling ramp. 7) NumberOfCycles determines how many times the heating and cooling ramps are repeated during the experiment and can range from 0.5 to 3 cycles. The ViiA 7 thermocycler is limited to 0.5 cycles. Each cycle is considered to be a heating ramp plus a cooling ramp in any order.\nDefault Value: Automatic\nDefault Calculation: If TemperatureRamping is Step, automatically set to the absolute value of the difference in MinTemperature and MaxTemperature rounded to the nearest integer. If TemperatureRamping is Linear, automatically set to Null.\nPattern Description: Greater than or equal to 1 and less than or equal to 100 or Null.\nProgrammatic Pattern: (RangeP[1, 100] | Automatic) | Null\nStepHoldTime\nThe length of time samples are held at each temperature during a stepped temperature ramp prior to fluorescence or static light scattering measurement.\nDefault Value: Automatic\nDefault Calculation: Automatically set to 30 Second when TemperatureRamping is \"Step\" and Null when TemperatureRamping is \"Linear\".\nPattern Description: Greater than or equal to 1 second and less than or equal to 13500 seconds or Null.\nProgrammatic Pattern: (RangeP[1*Second, 13500*Second] | Automatic) | Null\nDetection\nFluorescenceLaserPower\nThe fluorescence laser power filter used in the experiment. If OptimizeFluorescenceLaserPower is True, this is the laser power at which the optimization starts.\nDefault Value: Automatic\nDefault Calculation: Automatically set to 50 Percent if the instrument is Model[Instrument,MultimodeSpectrophotometer,\"Uncle\"] or an object with this model and Null if the instrument is Model[Instrument,Thermocycler,\"ViiA 7\"] or Model[Instrument, Thermocycler, \"QuantStudio 7 Flex\"] or an object with these models.\nPattern Description: 0 percent, 13 percent, 25 percent, 32 percent, 50 percent, or 100 percent or Null.\nProgrammatic Pattern: (LaserPowerFilterP | Automatic) | Null\nIndex Matches to: experiment samples\nStaticLightScatteringLaserPower\nThe static light scattering laser power filter used in the experiment. A laser power of 25% is recommended for most proteins. Higher laser powers may be necessary for smaller particles that do not scatter as much light. If OptimizeStaticLightScatteringLaserPower is True, the laser power used in the experiment will match the optimized fluorescence laser power setting.\nDefault Value: Automatic\nDefault Calculation: Automatically set to 25 Percent if the instrument is Model[Instrument,MultimodeSpectrophotometer,\"Uncle\"] or an object with this model and Null if the instrument is Model[Instrument,Thermocycler,\"ViiA 7\"] or Model[Instrument, Thermocycler, \"QuantStudio 7 Flex\"] or an object with these models.\nPattern Description: 0 percent, 13 percent, 25 percent, 32 percent, 50 percent, or 100 percent or Null.\nProgrammatic Pattern: (LaserPowerFilterP | Automatic) | Null\nIndex Matches to: experiment samples\nOptimizeFluorescenceLaserPower\nIndicates if prior to thermal ramping, the fluorescence laser power filter should be adjusted such that the sample's spectra at or between LaserOptimizationEmissionWavelengthRange has a peak intensity that falls within the LaserOptimizationTargetEmissionIntensityRange.\nDefault Value: False\nPattern Description: True or False.\nProgrammatic Pattern: BooleanP\nIndex Matches to: experiment samples\nOptimizeStaticLightScatteringLaserPower\nIndicates if prior to thermal ramping, the static light scattering laser power filter should be adjusted to match the optimized fluorescence laser power filter.\nDefault Value: False\nPattern Description: True or False.\nProgrammatic Pattern: BooleanP\nIndex Matches to: experiment samples\nLaserOptimizationEmissionWavelengthRange\nIndicates the wavelength range of the sample's spectra used to evaluate optimal laser setting when OptimizeFluorescenceLaserPower is True.\nDefault Value: Automatic\nDefault Calculation: Automatically set to Null if OptimizeFluorescenceLaserPower is False. If OptimizeFluorescenceLaserPower is True, automatically set to {300*Nanometer,450*Nanometer}.\nPattern Description: A span from anything greater than or equal to 250 nanometers and less than or equal to 719 nanometers in increments of 1 nanometer to anything greater than or equal to 251 nanometers and less than or equal to 750 nanometers in increments of 1 nanometer or Null.\nProgrammatic Pattern: (RangeP[250*Nanometer, 719*Nanometer, 1*Nanometer] ;; RangeP[251*Nanometer, 750*Nanometer, 1*Nanometer] | Automatic) | Null\nIndex Matches to: experiment samples\nLaserOptimizationTargetEmissionIntensityRange\nIndicates the optimal signal intensity range, expressed as a percentage of the detector saturation intensity, used to evaluate optimal laser setting when OptimizeFluorescenceLaserPower is True.\nDefault Value: Automatic\nDefault Calculation: Automatically set to Null if OptimizeFluorescenceLaserPower is False. If OptimizeFluorescenceLaserPower is True, set to {5 Percent, 20 Percent}.\nPattern Description: A span from anything greater than or equal to 0.1 percent and less than or equal to 99.9 percent in increments of 0.1 percent to anything greater than or equal to 0.2 percent and less than or equal to 100 percent in increments of 0.1 percent or Null.\nProgrammatic Pattern: (RangeP[0.1*Percent, 99.9*Percent, 0.1*Percent] ;; RangeP[0.2*Percent, 100*Percent, 0.1*Percent] | Automatic) | Null\nIndex Matches to: experiment samples\nExcitationWavelength\nThe wavelength of light used to excite the reporter component of the detection reagent.\nDefault Value: Automatic\nDefault Calculation: Automatically set to the available excitation wavelength closest to the excitation maximum of the corresponding detection reagent if the instrument is Model[Instrument, Thermocycler, \"ViiA 7\"] or Model[Instrument, Thermocycler, \"QuantStudio 7 Flex\"] or an object with these models. Automatically set to 266 nm if the instrument is Model[Instrument, MultimodeSpectrophotometer, \"Uncle\"] or an object with this model\nPattern Description: Greater than or equal to 266 nanometers and less than or equal to 670 nanometers.\nProgrammatic Pattern: RangeP[266*Nanometer, 670*Nanometer] | Automatic\nIndex Matches to: experiment samples\nEmissionWavelength\nThe wavelength of emitted light recorded.\nDefault Value: Automatic\nDefault Calculation: Automatically set to the available emission wavelength closest to the emission maximum of the corresponding detection reagent if the instrument is Model[Instrument, Thermocycler, \"ViiA 7\"] or Model[Instrument, Thermocycler, \"QuantStudio 7 Flex\"] or an object with these models. Automatically set to Null if the instrument is Model[Instrument, MultimodeSpectrophotometer, \"Uncle\"] or an object with this model\nPattern Description: Greater than or equal to 250 nanometers and less than or equal to 720 nanometers or Null.\nProgrammatic Pattern: (RangeP[250*Nanometer, 720*Nanometer] | Automatic) | Null\nIndex Matches to: experiment samples\nMinEmissionWavelength\nThe minimum wavelength of emitted light recorded for the sample fluorescence spectra.\nDefault Value: Automatic\nDefault Calculation: Automatically set to 250nm if the instrument is Model[Instrument, MultimodeSpectrophotometer, \"Uncle\"] or an object with this model and Null if the instrument is Model[Instrument, Thermocycler, \"ViiA 7\"] or Model[Instrument, Thermocycler, \"QuantStudio 7 Flex\"] or an object with these models.\nPattern Description: Greater than or equal to 250 nanometers and less than or equal to 720 nanometers or Null.\nProgrammatic Pattern: (RangeP[250*Nanometer, 720*Nanometer] | Automatic) | Null\nIndex Matches to: experiment samples\nMaxEmissionWavelength\nThe maximum wavelength of emitted light recorded for the sample fluorescence spectra.\nDefault Value: Automatic\nDefault Calculation: Automatically set to 720nm if the instrument is Model[Instrument, MultimodeSpectrophotometer, \"Uncle\"] or an object with this model and Null if the instrument is Model[Instrument, Thermocycler, \"ViiA 7\"] or Model[Instrument, Thermocycler, \"QuantStudio 7 Flex\"] or an object with these models.\nPattern Description: Greater than or equal to 250 nanometers and less than or equal to 720 nanometers or Null.\nProgrammatic Pattern: (RangeP[250*Nanometer, 720*Nanometer] | Automatic) | Null\nIndex Matches to: experiment samples\nStaticLightScatteringExcitationWavelength\nThe wavelength(s) of light used to illuminate static light scattering measurements.\nDefault Value: Automatic\nDefault Calculation: Automatically set to {266 Nanometer, 473 Nanometer} if the instrument is Model[Instrument, MultimodeSpectrophotometer, \"Uncle\"] or an object with this model and Null if the instrument is Model[Instrument, Thermocycler, \"ViiA 7\"] or Model[Instrument, Thermocycler, \"QuantStudio 7 Flex\"] or an object with these models.\nPattern Description: A selection of one or more of 266 nanometers or 473 nanometers or Null.\nProgrammatic Pattern: (DuplicateFreeListableP[266*Nanometer | 473*Nanometer] | Automatic) | Null\nIndex Matches to: experiment samples\nDynamicLightScattering\nIndicates if at least one DLS measurement of each sample is made during the experiment.\nDefault Value: False\nPattern Description: True or False.\nProgrammatic Pattern: BooleanP\nDynamicLightScatteringMeasurements\nDescribes if a DLS measurement of each sample will be made before thermal ramping, after thermal ramping, or both before and after thermal ramping.\nDefault Value: Automatic\nDefault Calculation: Automatically set to Null if DynamicLightScattering is False and to {Before,After} otherwise.\nPattern Description: {Before}, {After}, or {Before, After} or Null.\nProgrammatic Pattern: (({Before} | {After} | {Before, After}) | Automatic) | Null\nDynamicLightScatteringMeasurementTemperatures\nIndicates the temperatures at which DLS measurements will be acquired. If only a single measurement is required, provide only one temperature. If DynamicLightScatteringMeasurements->{Before,After}, provide a matched list of temperatures.\nDefault Value: Automatic\nDefault Calculation: Automatically set to Null if DynamicLightScattering is False and to the temperature of the adjacent thermal ramp otherwise.\nPattern Description: {Before, After} or greater than or equal to 15 degrees Celsius and less than or equal to 95 degrees Celsius or Null.\nProgrammatic Pattern: ((RangeP[15*Celsius, 95*Celsius] | {RangeP[15*Celsius, 95*Celsius], RangeP[15*Celsius, 95*Celsius]}) | Automatic) | Null\nNumberOfDynamicLightScatteringAcquisitions\nFor each DLS measurement, the number of series of speckle patterns that are each collected over the AcquisitionTime to create the measurement's autocorrelation curve.\nDefault Value: Automatic\nDefault Calculation: Automatically set to Null if DynamicLightScattering is False and to 4 if DynamicLightScattering is True.\nPattern Description: Greater than or equal to 1 and less than or equal to 20 in increments of 1 or Null.\nProgrammatic Pattern: (RangeP[1, 20, 1] | Automatic) | Null\nDynamicLightScatteringAcquisitionTime\nFor each DLS measurement, the length of time that each acquisition generates speckle patterns to create the measurement's autocorrelation curve.\nDefault Value: Automatic\nDefault Calculation: Automatically set to Null if DynamicLightScattering is False and to 5 seconds if DynamicLightScattering is True.\nPattern Description: Greater than or equal to 1 second and less than or equal to 30 seconds or Null.\nProgrammatic Pattern: (RangeP[1*Second, 30*Second] | Automatic) | Null\nAutomaticDynamicLightScatteringLaserSettings\nIndicates if the DynamicLightScatteringLaserPower and DynamicLightScatteringDiodeAttenuation are automatically set at the beginning of the assay by the Instrument to levels ideal for the samples.\nDefault Value: Automatic\nDefault Calculation: Automatically set to Null if DynamicLightScattering is False. If DynamicLightScattering is True and either the DynamicLightScatteringLaserPower or DynamicLightScatteringDiodeAttenuation is specified, the option is set to False. Otherwise, AutomaticDynamicLightScatteringLaserSettings is set to True.\nPattern Description: True or False or Null.\nProgrammatic Pattern: (BooleanP | Automatic) | Null\nDynamicLightScatteringLaserPower\nThe percent of the max dynamic light scattering laser power that is used to make DLS measurements. The laser level is optimized at run time by the instrument software when AutomaticDynamicLightScatteringLaserSettings is True and LaserLevel is Null.\nDefault Value: Automatic\nDefault Calculation: Automatically set to 100% if AutomaticDynamicLightScatteringLaserSettings is False and to Null otherwise.\nPattern Description: Greater than or equal to 1 percent and less than or equal to 100 percent or Null.\nProgrammatic Pattern: (RangeP[1*Percent, 100*Percent] | Automatic) | Null\nDynamicLightScatteringDiodeAttenuation\nThe percent of scattered light signal that is allowed to reach the avalanche photodiode for DLS measurements. The attenuator level is optimized at run time by the instrument software when AutomaticDynamicLightScatteringLaserSettings is True and DiodeAttenuation is Null.\nDefault Value: Automatic\nDefault Calculation: Automatically set to 100% if AutomaticDynamicLightScatteringLaserSettings is False and to Null otherwise.\nPattern Description: Greater than or equal to 1 percent and less than or equal to 100 percent or Null.\nProgrammatic Pattern: (RangeP[1*Percent, 100*Percent] | Automatic) | Null\nSample Storage\nContainerOut\nThe container which the assay samples are transferred into after the experiment.\nDefault Value: Null\nPattern Description: An object of type or subtype Model[Container] or Null.\nProgrammatic Pattern: ObjectP[Model[Container]] | Null\nSamplesOutStorageCondition\nThe condition under which the assay samples in ContainerOut should be stored after the protocol is completed.\nDefault Value: Null\nPattern Description: {AmbientStorage, Refrigerator, Freezer, DeepFreezer, CryogenicStorage, YeastIncubation, YeastShakingIncubation, BacterialIncubation, BacterialShakingIncubation, MammalianIncubation, ViralIncubation, CrystalIncubation, AcceleratedTesting, IntermediateTesting, LongTermTesting, UVVisLightTesting} or Disposal or Null.\nProgrammatic Pattern: (SampleStorageTypeP | Disposal) | Null\n\nSample Prep Options\nSample Preparation\nPreparatoryUnitOperations\nSpecifies a sequence of transferring, aliquoting, consolidating, or mixing of new or existing samples before the main experiment. These prepared samples can be used in the main experiment by referencing their defined name. For more information, please reference the documentation for ExperimentSampleManipulation.\nDefault Value: Null\nPattern Description: List of one or more unit Operation ManualSamplePreparation or RoboticSamplePreparation or unit Operation must match SamplePreparationP entries or Null.\nProgrammatic Pattern: {((ManualSamplePreparationMethodP | RoboticSamplePreparationMethodP) | SamplePreparationP)..} | Null\nPreparatoryPrimitives\nSpecifies a sequence of transferring, aliquoting, consolidating, or mixing of new or existing samples before the main experiment. These prepared samples can be used in the main experiment by referencing their defined name. For more information, please reference the documentation for ExperimentSampleManipulation.\nDefault Value: Null\nPattern Description: List of one or more a primitive with head Define, Transfer, Mix, Aliquot, Consolidation, FillToVolume, Incubate, Filter, Wait, Centrifuge, or Resuspend entries or Null.\nProgrammatic Pattern: {SampleManipulationP..} | Null\nPreparatory Incubation\nIncubate\nIndicates if the SamplesIn should be incubated at a fixed temperature prior to starting the experiment or any aliquoting. Sample Preparation occurs in the order of Incubation, Centrifugation, Filtration, and then Aliquoting (if specified).\nDefault Value: Automatic\nDefault Calculation: Resolves to True if any of the corresponding Incubation options are set. Otherwise, resolves to False.\nPattern Description: True or False.\nProgrammatic Pattern: BooleanP | Automatic\nIndex Matches to: experiment samples\nNested Index Matches to: experiment samples\nIncubationTemperature\nTemperature at which the SamplesIn should be incubated for the duration of the IncubationTime prior to starting the experiment.\nDefault Value: Automatic\nPattern Description: Ambient or greater than or equal to -20 degrees Celsius and less than or equal to 500 degrees Celsius or Null.\nProgrammatic Pattern: ((Ambient | RangeP[$MinIncubationTemperature, $MaxIncubationTemperature]) | Automatic) | Null\nIndex Matches to: experiment samples\nNested Index Matches to: experiment samples\nIncubationTime\nDuration for which SamplesIn should be incubated at the IncubationTemperature, prior to starting the experiment.\nDefault Value: Automatic\nPattern Description: Greater than or equal to 1 minute and less than or equal to 72 hours or Null.\nProgrammatic Pattern: (RangeP[1*Minute, $MaxExperimentTime] | Automatic) | Null\nIndex Matches to: experiment samples\nNested Index Matches to: experiment samples\nMix\nIndicates if this sample should be mixed while incubated, prior to starting the experiment.\nDefault Value: Automatic\nDefault Calculation: Automatically resolves to True if any Mix related options are set. Otherwise, resolves to False.\nPattern Description: True or False or Null.\nProgrammatic Pattern: (BooleanP | Automatic) | Null\nIndex Matches to: experiment samples\nNested Index Matches to: experiment samples\nMixType\nIndicates the style of motion used to mix the sample, prior to starting the experiment.\nDefault Value: Automatic\nDefault Calculation: Automatically resolves based on the container of the sample and the Mix option.\nPattern Description: Roll, Vortex, Sonicate, Pipette, Invert, Stir, Shake, Homogenize, Swirl, Disrupt, or Nutate or Null.\nProgrammatic Pattern: (MixTypeP | Automatic) | Null\nIndex Matches to: experiment samples\nNested Index Matches to: experiment samples\nMixUntilDissolved\nIndicates if the mix should be continued up to the MaxIncubationTime or MaxNumberOfMixes (chosen according to the mix Type), in an attempt dissolve any solute. Any mixing/incubation will occur prior to starting the experiment.\nDefault Value: Automatic\nDefault Calculation: Automatically resolves to True if MaxIncubationTime or MaxNumberOfMixes is set.\nPattern Description: True or False or Null.\nProgrammatic Pattern: (BooleanP | Automatic) | Null\nIndex Matches to: experiment samples\nNested Index Matches to: experiment samples\nMaxIncubationTime\nMaximum duration of time for which the samples will be mixed while incubated in an attempt to dissolve any solute, if the MixUntilDissolved option is chosen. This occurs prior to starting the experiment.\nDefault Value: Automatic\nDefault Calculation: Automatically resolves based on MixType, MixUntilDissolved, and the container of the given sample.\nPattern Description: Greater than or equal to 1 minute and less than or equal to 72 hours or Null.\nProgrammatic Pattern: (RangeP[1*Minute, $MaxExperimentTime] | Automatic) | Null\nIndex Matches to: experiment samples\nNested Index Matches to: experiment samples\nIncubationInstrument\nThe instrument used to perform the Mix and/or Incubation, prior to starting the experiment.\nDefault Value: Automatic\nDefault Calculation: Automatically resolves based on the options Mix, Temperature, MixType and container of the sample.\nPattern Description: An object of type or subtype Model[Instrument, Roller], Model[Instrument, OverheadStirrer], Model[Instrument, Vortex], Model[Instrument, Shaker], Model[Instrument, BottleRoller], Model[Instrument, Roller], Model[Instrument, Sonicator], Model[Instrument, HeatBlock], Model[Instrument, Homogenizer], Model[Instrument, Disruptor], Model[Instrument, Nutator], Model[Instrument, Thermocycler], Model[Instrument, EnvironmentalChamber], Model[Instrument, Pipette], Object[Instrument, Roller], Object[Instrument, OverheadStirrer], Object[Instrument, Vortex], Object[Instrument, Shaker], Object[Instrument, BottleRoller], Object[Instrument, Roller], Object[Instrument, Sonicator], Object[Instrument, HeatBlock], Object[Instrument, Homogenizer], Object[Instrument, Disruptor], Object[Instrument, Nutator], Object[Instrument, Thermocycler], Object[Instrument, EnvironmentalChamber], or Object[Instrument, Pipette] or Null.\nProgrammatic Pattern: (ObjectP[Join[MixInstrumentModels, MixInstrumentObjects]] | Automatic) | Null\nIndex Matches to: experiment samples\nNested Index Matches to: experiment samples\nAnnealingTime\nMinimum duration for which the SamplesIn should remain in the incubator allowing the system to settle to room temperature after the IncubationTime has passed but prior to starting the experiment.\nDefault Value: Automatic\nPattern Description: Greater than or equal to 0 minutes and less than or equal to 72 hours or Null.\nProgrammatic Pattern: (RangeP[0*Minute, $MaxExperimentTime] | Automatic) | Null\nIndex Matches to: experiment samples\nNested Index Matches to: experiment samples\nIncubateAliquotContainer\nThe desired type of container that should be used to prepare and house the incubation samples which should be used in lieu of the SamplesIn for the experiment.\nDefault Value: Automatic\nPattern Description: An object of type or subtype Model[Container] or {Index, Container} or Null.\nProgrammatic Pattern: ((ObjectP[Model[Container]] | {GreaterEqualP[1, 1] | (Automatic | Null), (ObjectP[{Model[Container], Object[Container]}] | _String) | Automatic}) | Automatic) | Null\nIndex Matches to: experiment samples\nNested Index Matches to: experiment samples\nIncubateAliquotDestinationWell\nThe desired position in the corresponding AliquotContainer in which the aliquot samples will be placed.\nDefault Value: Automatic\nDefault Calculation: Automatically resolves to A1 in containers with only one position. For plates, fills wells in the order provided by the function AllWells.\nPattern Description: Any well from A1 to H12 or Null.\nProgrammatic Pattern: (WellPositionP | Automatic) | Null\nIndex Matches to: experiment samples\nNested Index Matches to: experiment samples\nIncubateAliquot\nThe amount of each sample that should be transferred from the SamplesIn into the IncubateAliquotContainer when performing an aliquot before incubation.\nDefault Value: Automatic\nDefault Calculation: Automatically set as the smaller between the current sample volume and the maximum volume of the destination container.\nPattern Description: All or greater than or equal to 1 microliter and less than or equal to 20 liters or Null.\nProgrammatic Pattern: ((RangeP[1*Microliter, 20*Liter] | All) | Automatic) | Null\nIndex Matches to: experiment samples\nNested Index Matches to: experiment samples\nPreparatory Centrifugation\nCentrifuge\nIndicates if the SamplesIn should be centrifuged prior to starting the experiment or any aliquoting. Sample Preparation occurs in the order of Incubation, Centrifugation, Filtration, and then Aliquoting (if specified).\nDefault Value: Automatic\nDefault Calculation: Resolves to True if any of the corresponding Centrifuge options are set. Otherwise, resolves to False.\nPattern Description: True or False.\nProgrammatic Pattern: BooleanP | Automatic\nIndex Matches to: experiment samples\nNested Index Matches to: experiment samples\nCentrifugeInstrument\nThe centrifuge that will be used to spin the provided samples prior to starting the experiment.\nDefault Value: Automatic\nPattern Description: An object of type or subtype Model[Instrument, Centrifuge] or Object[Instrument, Centrifuge] or Null.\nProgrammatic Pattern: (ObjectP[{Model[Instrument, Centrifuge], Object[Instrument, Centrifuge]}] | Automatic) | Null\nIndex Matches to: experiment samples\nNested Index Matches to: experiment samples\nCentrifugeIntensity\nThe rotational speed or the force that will be applied to the samples by centrifugation prior to starting the experiment.\nDefault Value: Automatic\nPattern Description: Greater than 0 revolutions per minute or greater than 0 standard accelerations due to gravity on the surface of the earth or Null.\nProgrammatic Pattern: ((GreaterP[0*RPM] | GreaterP[0*GravitationalAcceleration]) | Automatic) | Null\nIndex Matches to: experiment samples\nNested Index Matches to: experiment samples\nCentrifugeTime\nThe amount of time for which the SamplesIn should be centrifuged prior to starting the experiment.\nDefault Value: Automatic\nPattern Description: Greater than 0 minutes or Null.\nProgrammatic Pattern: (GreaterP[0*Minute] | Automatic) | Null\nIndex Matches to: experiment samples\nNested Index Matches to: experiment samples\nCentrifugeTemperature\nThe temperature at which the centrifuge chamber should be held while the samples are being centrifuged prior to starting the experiment.\nDefault Value: Automatic\nPattern Description: Ambient or greater than or equal to -10 degrees Celsius and less than or equal to 40 degrees Celsius or Null.\nProgrammatic Pattern: ((Ambient | RangeP[-10*Celsius, 40*Celsius]) | Automatic) | Null\nIndex Matches to: experiment samples\nNested Index Matches to: experiment samples\nCentrifugeAliquotDestinationWell\nThe desired position in the corresponding AliquotContainer in which the aliquot samples will be placed.\nDefault Value: Automatic\nDefault Calculation: Automatically resolves to A1 in containers with only one position. For plates, fills wells in the order provided by the function AllWells.\nPattern Description: Any well from A1 to H12 or Null.\nProgrammatic Pattern: (WellPositionP | Automatic) | Null\nIndex Matches to: experiment samples\nNested Index Matches to: experiment samples\nCentrifugeAliquotContainer\nThe desired type of container that should be used to prepare and house the centrifuge samples which should be used in lieu of the SamplesIn for the experiment.\nDefault Value: Automatic\nPattern Description: An object of type or subtype Model[Container] or {Index, Container} or Null.\nProgrammatic Pattern: ((ObjectP[Model[Container]] | {GreaterEqualP[1, 1] | (Automatic | Null), (ObjectP[{Model[Container], Object[Container]}] | _String) | Automatic}) | Automatic) | Null\nIndex Matches to: experiment samples\nNested Index Matches to: experiment samples\nCentrifugeAliquot\nThe amount of each sample that should be transferred from the SamplesIn into the CentrifugeAliquotContainer when performing an aliquot before centrifugation.\nDefault Value: Automatic\nDefault Calculation: Automatically set as the smaller between the current sample volume and the maximum volume of the destination container.\nPattern Description: All or greater than or equal to 1 microliter and less than or equal to 20 liters or Null.\nProgrammatic Pattern: ((RangeP[1*Microliter, 20*Liter] | All) | Automatic) | Null\nIndex Matches to: experiment samples\nNested Index Matches to: experiment samples\nPreparatory Filtering\nFiltration\nIndicates if the SamplesIn should be filter prior to starting the experiment or any aliquoting. Sample Preparation occurs in the order of Incubation, Centrifugation, Filtration, and then Aliquoting (if specified).\nDefault Value: Automatic\nDefault Calculation: Resolves to True if any of the corresponding Filter options are set. Otherwise, resolves to False.\nPattern Description: True or False.\nProgrammatic Pattern: BooleanP | Automatic\nIndex Matches to: experiment samples\nNested Index Matches to: experiment samples\nFiltrationType\nThe type of filtration method that should be used to perform the filtration.\nDefault Value: Automatic\nDefault Calculation: Will automatically resolve to a filtration type appropriate for the volume of sample being filtered.\nPattern Description: PeristalticPump, Centrifuge, Vacuum, Syringe, or AirPressure or Null.\nProgrammatic Pattern: (FiltrationTypeP | Automatic) | Null\nIndex Matches to: experiment samples\nNested Index Matches to: experiment samples\nFilterInstrument\nThe instrument that should be used to perform the filtration.\nDefault Value: Automatic\nDefault Calculation: Will automatically resolved to an instrument appropriate for the filtration type.\nPattern Description: An object of type or subtype Model[Instrument, FilterBlock], Object[Instrument, FilterBlock], Model[Instrument, PeristalticPump], Object[Instrument, PeristalticPump], Model[Instrument, VacuumPump], Object[Instrument, VacuumPump], Model[Instrument, Centrifuge], Object[Instrument, Centrifuge], Model[Instrument, SyringePump], or Object[Instrument, SyringePump] or Null.\nProgrammatic Pattern: (ObjectP[{Model[Instrument, FilterBlock], Object[Instrument, FilterBlock], Model[Instrument, PeristalticPump], Object[Instrument, PeristalticPump], Model[Instrument, VacuumPump], Object[Instrument, VacuumPump], Model[Instrument, Centrifuge], Object[Instrument, Centrifuge], Model[Instrument, SyringePump], Object[Instrument, SyringePump]}] | Automatic) | Null\nIndex Matches to: experiment samples\nNested Index Matches to: experiment samples\nFilter\nThe filter that should be used to remove impurities from the SamplesIn prior to starting the experiment.\nDefault Value: Automatic\nDefault Calculation: Will automatically resolve to a filter appropriate for the filtration type and instrument.\nPattern Description: An object of type or subtype Model[Container, Plate, Filter], Model[Container, Vessel, Filter], or Model[Item, Filter] or Null.\nProgrammatic Pattern: (ObjectP[{Model[Container, Plate, Filter], Model[Container, Vessel, Filter], Model[Item, Filter]}] | Automatic) | Null\nIndex Matches to: experiment samples\nNested Index Matches to: experiment samples\nFilterMaterial\nThe membrane material of the filter that should be used to remove impurities from the SamplesIn prior to starting the experiment.\nDefault Value: Automatic\nDefault Calculation: Resolves to an appropriate filter material for the given sample is Filtration is set to True.\nPattern Description: Cellulose, Cotton, Polyethylene, Polypropylene, PTFE, Nylon, PES, PLUS, PVDF, GlassFiber, GHP, UHMWPE, EPDM, DuraporePVDF, GxF, ZebaDesaltingResin, NickelResin, Silica, or HLB or Null.\nProgrammatic Pattern: (FilterMembraneMaterialP | Automatic) | Null\nIndex Matches to: experiment samples\nNested Index Matches to: experiment samples\nPrefilterMaterial\nThe material from which the prefilter filtration membrane should be made of to remove impurities from the SamplesIn prior to starting the experiment.\nDefault Value: Automatic\nDefault Calculation: By default, no prefiltration is performed on samples, even when Filter->True.\nPattern Description: Cellulose, Cotton, Polyethylene, Polypropylene, PTFE, Nylon, PES, PLUS, PVDF, GlassFiber, GHP, UHMWPE, EPDM, DuraporePVDF, GxF, ZebaDesaltingResin, NickelResin, Silica, or HLB or Null.\nProgrammatic Pattern: (FilterMembraneMaterialP | Automatic) | Null\nIndex Matches to: experiment samples\nNested Index Matches to: experiment samples\nFilterPoreSize\nThe pore size of the filter that should be used when removing impurities from the SamplesIn prior to starting the experiment.\nDefault Value: Automatic\nDefault Calculation: Resolves to an appropriate filter pore size for the given sample is Filtration is set to True.\nPattern Description: 0.008 micrometers, 0.1 micrometers, 0.2 micrometers, 0.22 micrometers, 0.45 micrometers, 1. micrometer, 1.1 micrometers, 2.5 micrometers, 6. micrometers, 20. micrometers, 30. micrometers, or 100. micrometers or Null.\nProgrammatic Pattern: (FilterSizeP | Automatic) | Null\nIndex Matches to: experiment samples\nNested Index Matches to: experiment samples\nPrefilterPoreSize\nThe pore size of the filter; all particles larger than this should be removed during the filtration.\nDefault Value: Automatic\nDefault Calculation: By default, no prefiltration is performed on samples, even when Filter->True.\nPattern Description: 0.008 micrometers, 0.1 micrometers, 0.2 micrometers, 0.22 micrometers, 0.45 micrometers, 1. micrometer, 1.1 micrometers, 2.5 micrometers, 6. micrometers, 20. micrometers, 30. micrometers, or 100. micrometers or Null.\nProgrammatic Pattern: (FilterSizeP | Automatic) | Null\nIndex Matches to: experiment samples\nNested Index Matches to: experiment samples\nFilterSyringe\nThe syringe used to force that sample through a filter.\nDefault Value: Automatic\nDefault Calculation: Resolves to an syringe appropriate to the volume of sample being filtered, if Filtration is set to True.\nPattern Description: An object of type or subtype Model[Container, Syringe] or Object[Container, Syringe] or a prepared sample or Null.\nProgrammatic Pattern: ((ObjectP[{Model[Container, Syringe], Object[Container, Syringe]}] | _String) | Automatic) | Null\nIndex Matches to: experiment samples\nNested Index Matches to: experiment samples\nFilterHousing\nThe filter housing that should be used to hold the filter membrane when filtration is performed using a standalone filter membrane.\nDefault Value: Automatic\nDefault Calculation: Resolve to an housing capable of holding the size of the membrane being used, if filter with Membrane FilterType is being used and Filtration is set to True.\nPattern Description: An object of type or subtype Model[Instrument, FilterHousing], Object[Instrument, FilterHousing], Model[Instrument, FilterBlock], or Object[Instrument, FilterBlock] or Null.\nProgrammatic Pattern: (ObjectP[{Model[Instrument, FilterHousing], Object[Instrument, FilterHousing], Model[Instrument, FilterBlock], Object[Instrument, FilterBlock]}] | Automatic) | Null\nIndex Matches to: experiment samples\nNested Index Matches to: experiment samples\nFilterIntensity\nThe rotational speed or force at which the samples will be centrifuged during filtration.\nDefault Value: Automatic\nDefault Calculation: Will automatically resolve to 2000 GravitationalAcceleration if FiltrationType is Centrifuge and Filtration is True.\nPattern Description: Greater than 0 revolutions per minute or greater than 0 standard accelerations due to gravity on the surface of the earth or Null.\nProgrammatic Pattern: ((GreaterP[0*RPM] | GreaterP[0*GravitationalAcceleration]) | Automatic) | Null\nIndex Matches to: experiment samples\nNested Index Matches to: experiment samples\nFilterTime\nThe amount of time for which the samples will be centrifuged during filtration.\nDefault Value: Automatic\nDefault Calculation: Will automatically resolve to 5 Minute if FiltrationType is Centrifuge and Filtration is True.\nPattern Description: Greater than 0 minutes or Null.\nProgrammatic Pattern: (GreaterP[0*Minute] | Automatic) | Null\nIndex Matches to: experiment samples\nNested Index Matches to: experiment samples\nFilterTemperature\nThe temperature at which the centrifuge chamber will be held while the samples are being centrifuged during filtration.\nDefault Value: Automatic\nDefault Calculation: Will automatically resolve to 22 Celsius if FiltrationType is Centrifuge and Filtration is True.\nPattern Description: Greater than or equal to 4 degrees Celsius or Null.\nProgrammatic Pattern: ((Alternatives[GreaterEqualP[4*Celsius]]) | Automatic) | Null\nIndex Matches to: experiment samples\nNested Index Matches to: experiment samples\nFilterContainerOut\nThe desired container filtered samples should be produced in or transferred into by the end of filtration, with indices indicating grouping of samples in the same plates, if desired.\nDefault Value: Automatic\nDefault Calculation: Automatically set as the PreferredContainer for the Volume of the sample. For plates, attempts to fill all wells of a single plate with the same model before using another one.\nPattern Description: An object of type or subtype Model[Container] or Object[Container] or a prepared sample or {Index, Container} or Null.\nProgrammatic Pattern: (((ObjectP[{Model[Container], Object[Container]}] | _String) | {GreaterEqualP[1, 1] | Automatic, (ObjectP[{Model[Container], Object[Container]}] | _String) | Automatic}) | Automatic) | Null\nIndex Matches to: experiment samples\nNested Index Matches to: experiment samples\nFilterAliquotDestinationWell\nThe desired position in the corresponding AliquotContainer in which the aliquot samples will be placed.\nDefault Value: Automatic\nDefault Calculation: Automatically resolves to A1 in containers with only one position. For plates, fills wells in the order provided by the function AllWells.\nPattern Description: Any well from A1 to H12 or Null.\nProgrammatic Pattern: (WellPositionP | Automatic) | Null\nIndex Matches to: experiment samples\nNested Index Matches to: experiment samples\nFilterAliquotContainer\nThe desired type of container that should be used to prepare and house the filter samples which should be used in lieu of the SamplesIn for the experiment.\nDefault Value: Automatic\nPattern Description: An object of type or subtype Model[Container] or {Index, Container} or Null.\nProgrammatic Pattern: ((ObjectP[Model[Container]] | {GreaterEqualP[1, 1] | (Automatic | Null), (ObjectP[{Model[Container], Object[Container]}] | _String) | Automatic}) | Automatic) | Null\nIndex Matches to: experiment samples\nNested Index Matches to: experiment samples\nFilterAliquot\nThe amount of each sample that should be transferred from the SamplesIn into the FilterAliquotContainer when performing an aliquot before filtration.\nDefault Value: Automatic\nDefault Calculation: Automatically set as the smaller between the current sample volume and the maximum volume of the destination container.\nPattern Description: All or greater than or equal to 1 microliter and less than or equal to 20 liters or Null.\nProgrammatic Pattern: ((RangeP[1*Microliter, 20*Liter] | All) | Automatic) | Null\nIndex Matches to: experiment samples\nNested Index Matches to: experiment samples\nFilterSterile\nIndicates if the filtration of the samples should be done in a sterile environment.\nDefault Value: Automatic\nDefault Calculation: Resolve to False if Filtration is indicated. If sterile filtration is desired, this option must manually be set to True.\nPattern Description: True or False or Null.\nProgrammatic Pattern: (BooleanP | Automatic) | Null\nIndex Matches to: experiment samples\nNested Index Matches to: experiment samples\nAliquoting\nAliquot\nIndicates if aliquots should be taken from the SamplesIn and transferred into new AliquotSamples used in lieu of the SamplesIn for the experiment. Note that if NumberOfReplicates is specified this indicates that the input samples will also be aliquoted that number of times. Note that Aliquoting (if specified) occurs after any Sample Preparation (if specified).\nFigure 3.5: Prior to measurement in ExperimentThermalShift any number of samples may be pooled to create new assay samples with the following steps. Step1: Samples are pooled in liquid handler compatible AliquotContainer. Step2: After pooling, pooled samples can optionally be mixed either by pipetting or vortexing. Step3: After pooling and mixing (if desired), pooled samples can be optionally incubated at a desired temperature for a period of time. Step4: After incubation, pooled samples can remain in the thermal incubation instrument before being removed, allowing the system to settle to room temperature.\nDefault Value: Automatic\nPattern Description: True or False.\nProgrammatic Pattern: BooleanP | Automatic\nIndex Matches to: experiment samples\nAliquotAmount\nThe amount of a sample that should be transferred from the input samples into aliquots.\nDefault Value: Automatic\nDefault Calculation: Automatically set as the smaller between the current sample volume and the maximum volume of the destination container if a liquid, or the current Mass or Count if a solid or counted item, respectively.\nPattern Description: All or Count or Count or Mass or Volume or Null.\nProgrammatic Pattern: ((RangeP[1*Microliter, 20*Liter] | RangeP[1*Milligram, 20*Kilogram] | GreaterP[0*Unit, 1*Unit] | GreaterP[0., 1.] | All) | Automatic) | Null\nIndex Matches to: experiment samples\nNested Index Matches to: experiment samples\nTargetConcentration\nThe desired final concentration of analyte in the AliquotSamples after dilution of aliquots of SamplesIn with the ConcentratedBuffer and BufferDiluent which should be used in lieu of the SamplesIn for the experiment.\nDefault Value: Automatic\nDefault Calculation: Automatically calculated based on aliquot and buffer volumes.\nPattern Description: Greater than 0 molar or greater than 0 grams per liter or Null.\nProgrammatic Pattern: ((GreaterP[0*Molar] | GreaterP[0*(Gram/Liter)]) | Automatic) | Null\nIndex Matches to: experiment samples\nNested Index Matches to: experiment samples\nTargetConcentrationAnalyte\nThe substance whose final concentration is attained with the TargetConcentration option.\nDefault Value: Automatic\nDefault Calculation: Automatically set to the first value in the Analytes field of the input sample, or, if not populated, to the first analyte in the Composition field of the input sample, or if none exist, the first identity model of any kind in the Composition field.\nPattern Description: An object of type or subtype Model[Molecule], Model[Molecule, cDNA], Model[Molecule, Oligomer], Model[Molecule, Transcript], Model[Molecule, Protein], Model[Molecule, Protein, Antibody], Model[Molecule, Carbohydrate], Model[Molecule, Polymer], Model[Resin], Model[Resin, SolidPhaseSupport], Model[Lysate], Model[ProprietaryFormulation], Model[Virus], Model[Cell], Model[Cell, Mammalian], Model[Cell, Bacteria], Model[Cell, Yeast], Model[Tissue], Model[Material], or Model[Species] or Null.\nProgrammatic Pattern: (ObjectP[IdentityModelTypes] | Automatic) | Null\nIndex Matches to: experiment samples\nNested Index Matches to: experiment samples\nAssayVolume\nThe desired total volume of the aliquoted sample plus dilution buffer.\nDefault Value: Automatic\nDefault Calculation: Automatically determined based on Volume and TargetConcentration option values.\nPattern Description: Greater than or equal to 1 microliter and less than or equal to 20 liters or Null.\nProgrammatic Pattern: (RangeP[1*Microliter, 20*Liter] | Automatic) | Null\nIndex Matches to: experiment samples\nConcentratedBuffer\nThe concentrated buffer which should be diluted by the BufferDilutionFactor in the final solution (i.e., the combination of the sample, ConcentratedBuffer, and BufferDiluent). The ConcentratedBuffer and BufferDiluent will be combined and then mixed with the sample, where the combined volume of these buffers is the difference between the AliquotAmount and the total AssayVolume.\nDefault Value: Automatic\nPattern Description: An object of type or subtype Model[Sample] or Object[Sample] or a prepared sample or Null.\nProgrammatic Pattern: ((ObjectP[{Model[Sample], Object[Sample]}] | _String) | Automatic) | Null\nIndex Matches to: experiment samples\nBufferDilutionFactor\nThe dilution factor by which the concentrated buffer should be diluted in the final solution (i.e., the combination of the sample, ConcentratedBuffer, and BufferDiluent). The ConcentratedBuffer and BufferDiluent will be combined and then mixed with the sample, where the combined volume of these buffers is the difference between the AliquotAmount and the total AssayVolume.\nDefault Value: Automatic\nDefault Calculation: If ConcentratedBuffer is specified, automatically set to the ConcentratedBufferDilutionFactor of that sample; otherwise, set to Null.\nPattern Description: Greater than or equal to 1 in increments of 1 or Null.\nProgrammatic Pattern: (GreaterEqualP[1, 1] | Automatic) | Null\nIndex Matches to: experiment samples\nBufferDiluent\nThe buffer used to dilute the aliquot sample such that ConcentratedBuffer is diluted by BufferDilutionFactor in the final solution. The ConcentratedBuffer and BufferDiluent will be combined and then mixed with the sample, where the combined volume of these buffers is the difference between the AliquotAmount and the total AssayVolume.\nDefault Value: Automatic\nDefault Calculation: Automatically resolves to Model[Sample, \"Milli-Q water\"] if ConcentratedBuffer is specified; otherwise, resolves to Null.\nPattern Description: An object of type or subtype Model[Sample] or Object[Sample] or a prepared sample or Null.\nProgrammatic Pattern: ((ObjectP[{Model[Sample], Object[Sample]}] | _String) | Automatic) | Null\nIndex Matches to: experiment samples\nAssayBuffer\nThe buffer that should be added to any aliquots requiring dilution, where the volume of this buffer added is the difference between the AliquotAmount and the total AssayVolume.\nDefault Value: Automatic\nDefault Calculation: Automatically resolves to Model[Sample, \"Milli-Q water\"] if ConcentratedBuffer is not specified; otherwise, resolves to Null.\nPattern Description: An object of type or subtype Model[Sample] or Object[Sample] or a prepared sample or Null.\nProgrammatic Pattern: ((ObjectP[{Model[Sample], Object[Sample]}] | _String) | Automatic) | Null\nIndex Matches to: experiment samples\nAliquotSampleStorageCondition\nThe non-default conditions under which any aliquot samples generated by this experiment should be stored after the protocol is completed.\nDefault Value: Automatic\nPattern Description: {AmbientStorage, Refrigerator, Freezer, DeepFreezer, CryogenicStorage, YeastIncubation, YeastShakingIncubation, BacterialIncubation, BacterialShakingIncubation, MammalianIncubation, ViralIncubation, CrystalIncubation, AcceleratedTesting, IntermediateTesting, LongTermTesting, UVVisLightTesting} or Disposal or Null.\nProgrammatic Pattern: ((SampleStorageTypeP | Disposal) | Automatic) | Null\nIndex Matches to: experiment samples\nDestinationWell\nThe desired position in the corresponding AliquotContainer in which the aliquot samples will be placed.\nDefault Value: Automatic\nDefault Calculation: Automatically resolves to A1 in containers with only one position. For plates, fills wells in the order provided by the function AllWells.\nPattern Description: Any well from A1 to H12 or list of one or more any well from A1 to H12 or any well from A1 to H12 entries or Null.\nProgrammatic Pattern: ((WellPositionP | {((Automatic | Null) | WellPositionP)..}) | Automatic) | Null\nAliquotContainer\nThe desired type of container that should be used to prepare and house the aliquot samples, with indices indicating grouping of samples in the same plates, if desired. This option will resolve to be the length of the SamplesIn * NumberOfReplicates.\nDefault Value: Automatic\nDefault Calculation: Automatically set as the PreferredContainer for the AssayVolume of the sample. For plates, attempts to fill all wells of a single plate with the same model before aliquoting into the next.\nPattern Description: An object of type or subtype Model[Container] or Object[Container] or a prepared sample or Automatic or Null or {Index, Container} or list of one or more an object of type or subtype Model[Container] or Object[Container] or a prepared sample or Automatic or Null entries or list of one or more Automatic or Null or {Index, Container} entries.\nProgrammatic Pattern: (((ObjectP[{Model[Container], Object[Container]}] | _String) | (Automatic | Null) | {GreaterEqualP[1, 1] | (Automatic | Null), (ObjectP[{Model[Container], Object[Container]}] | _String) | (Automatic | Null)} | {((ObjectP[{Model[Container], Object[Container]}] | _String) | (Automatic | Null))..} | {({GreaterEqualP[1, 1] | (Automatic | Null), (ObjectP[{Model[Container], Object[Container]}] | _String) | (Automatic | Null)} | (Automatic | Null))..}) | Automatic) | Null\nAliquotPreparation\nIndicates the desired scale at which liquid handling used to generate aliquots will occur.\nDefault Value: Automatic\nDefault Calculation: Automatic resolution will occur based on manipulation volumes and container types.\nPattern Description: Manual or Robotic or Null.\nProgrammatic Pattern: (PreparationMethodP | Automatic) | Null\nConsolidateAliquots\nIndicates if identical aliquots should be prepared in the same container/position.\nDefault Value: Automatic\nPattern Description: True or False or Null.\nProgrammatic Pattern: (BooleanP | Automatic) | Null\n\nProtocol Options\nOrganizational Information\nTemplate\nA template protocol whose methodology should be reproduced in running this experiment. Option values will be inherited from the template protocol, but can be individually overridden by directly specifying values for those options to this Experiment function.\nDefault Value: Null\nPattern Description: An object of type or subtype Object[Protocol] or an object of type or subtype of Object[Protocol] with UnresolvedOptions, ResolvedOptions specified or Null.\nProgrammatic Pattern: (ObjectP[Object[Protocol]] | FieldReferenceP[Object[Protocol], {UnresolvedOptions, ResolvedOptions}]) | Null\nName\nA object name which should be used to refer to the output object in lieu of an automatically generated ID number.\nDefault Value: Null\nPattern Description: A string or Null.\nProgrammatic Pattern: _String | Null\nPost Experiment\nMeasureWeight\nIndicates if any solid samples that are modified in the course of the experiment should have their weights measured and updated after running the experiment. Please note that public samples are weighed regardless of the value of this option.\nDefault Value: Automatic\nPattern Description: True or False or Null.\nProgrammatic Pattern: (BooleanP | Automatic) | Null\nMeasureVolume\nIndicates if any liquid samples that are modified in the course of the experiment should have their volumes measured and updated after running the experiment. Please note that public samples are volume measured regardless of the value of this option.\nDefault Value: Automatic\nPattern Description: True or False or Null.\nProgrammatic Pattern: (BooleanP | Automatic) | Null\nImageSample\nIndicates if any samples that are modified in the course of the experiment should be freshly imaged after running the experiment. Please note that public samples are imaged regardless of the value of this option.\nDefault Value: Automatic\nPattern Description: True or False or Null.\nProgrammatic Pattern: (BooleanP | Automatic) | Null\n\nExample Calls\nLinear and Stepped Thermal Profiles\nIndicate the rate of temperature change during a linear thermal profile from 25 Celsius to 95 Celsius.\nExperimentThermalShift[mySamples,\n \tTemperatureRampRate -> (0.1 * Celsius / Second),\n \tTemperatureRamping -> Linear,\n \tMinTemperature -> (25 * Celsius),\n \tMaxTemperature -> (95 * Celsius)\n ]\nIndicate the rate of temperature change during a stepped thermal profile from 30 Celsius to 90 Celsius with measurements every 2.5 degrees.\nExperimentThermalShift[mySamples,\n \tTemperatureRampRate -> (0.1 * Celsius / Second),\n \tTemperatureRamping -> Step, NumberOfTemperatureRampSteps -> 24,\n MinTemperature -> (30 * Celsius),\n \tMaxTemperature -> (90 * Celsius)\n ]\nIndicate data collection over 2 {Heating, Cooling} cycles.\nExperimentThermalShift[mySamples,\n \tTemperatureRampOrder -> {Heating, Cooling},\n \tNumberOfCycles -> 2\n ]\nSingleton and pooled samples\nGenerate a thermal shift protocol to analyze a list of singleton sample inputs:\nExperimentThermalShift[{mySample1, mySample2}]\nGenerates a thermal shift protocol from a nested list of inputs by pooling inputs within the same nested list:\nExperimentThermalShift[\n \t{{mySample1, mySample2}, {mySample3, mySample4}},\n \tAliquotAmount -> {\n   \t\t{50 * Microliter, 50 * Microliter},\n   \t\t{50 * Microliter, 50 * Microliter}\n   \t},\n \tAliquotContainer ->\n  Model[Container, Plate, \"96-well 2mL Deep Well Plate\"]\n ]\nGenerates a thermal shift protocol from a list of singleton containers by treating each well inside the container as an independent input sample:\nExperimentThermalShift[{myContainer}]\nGenerates a thermal shift protocol from a nested list of containers by pooling all the samples in the container:\nExperimentThermalShift[{{myContainer}},\n \tAliquotAmount -> (50 * Microliter),\n \tAliquotContainer ->\n  Model[Container, Plate, \"96-well 2mL Deep Well Plate\"]\n ]\nDilution and Serial Dilution Curves\nIndicate the type and number of serial dilutions of a single sample. Provide the volume of the sample that should be transferred, the volume of diluent the sample should be added to and the number of times the sample should be diluted. This should be used if you want give the volumes the sample will be diluted by with instead of dilution factors. The example call below will create a series of samples with dilution factors of (0.5, 0.25, 0.125, 0.0625, 0.03125) and a volume of 25 Microliters.\nExperimentThermalShift[mySample,\n \tSerialDilutionCurve -> {{25 * Microliter, 25 * Microliter, 5}}\n ]\nGenerate a serial dilution curve to dilute the sample. Provide the volume of the sample, a dilution factor and the number of times the sample should be diluted. This should be used if you want the sample to be diluted by the same factor at each step of the serial dilution. The volume of the sample will be the final volume of the sample after the dilution is performed. The example call below will create a series of samples with dilution factors of (0.7, 0.49, 0.34, 0.24, 0.17, 0.12) and a volume of 60 Microliters.\nExperimentThermalShift[mySamples,\n SerialDilutionCurve -> {60 * Microliter, {0.7, 6}}]\nGenerate a serial dilution curve to dilute the sample. Provide the volume of the sample and a series of dilution factors the sample should be diluted by at each step. This should be used if you want the sample to be diluted by different factors at each step of the serial dilution. The volume of the sample will be the final volume of the sample after the dilution is performed. The example call below will create a series of samples with dilution factors of (0.7, 0.49, 0.34, 0.31, 0.28, 0.25) and a volume of 60 Microliters.\nExperimentThermalShift[mySamples,\n \tSerialDilutionCurve -> {60 * Microliter, {0.7, 0.7, 0.7, 0.9, 0.9,\n    0.9}}\n ]\nIndicate the type and number of dilutions of a single sample.\nExperimentThermalShift[mySample,\n \tDilutionCurve -> {\n   \t\t{\n    \t\t\t{25 * Microliter, 25 * Microliter},\n    \t\t\t{25 * Microliter, 50 * Microliter},\n    \t\t\t{25 * Microliter, 100 * Microliter}\n    \t\t}\n   \t}\n ]\nIndicate the type and number of serial dilutions of each sample within a pooled sample.\nExperimentThermalShift[{{mySample1, mySample2}},\n \tSerialDilutionCurve -> {\n   \t\t{\n    \t\t\t{25 * Microliter, 25 * Microliter, 5},\n    \t\t\t{25 * Microliter, 50 * Microliter, 5}\n    \t\t}\n   \t},\n \tAliquotAmount -> {{20 * Microliter, 20 * Microliter}},\n \tAliquotContainer ->\n  Model[Container, Plate, \"96-well 2mL Deep Well Plate\"]\n ]\nIndicate the type and number of dilutions of each sample within a pooled sample.\nExperimentThermalShift[{{mySample1, mySample2}},\n \tDilutionCurve -> {\n   \t\t{\n    \t\t\t{\n     \t\t\t\t{25 * Microliter, 25 * Microliter},\n     \t\t\t\t{25 * Microliter, 50 * Microliter},\n     \t\t\t\t{25 * Microliter, 100 * Microliter}\n     \t\t\t},\n    \t\t\t{\n     \t\t\t\t{25 * Microliter, 25 * Microliter},\n     \t\t\t\t{25 * Microliter, 25 * Microliter},\n     \t\t\t\t{25 * Microliter, 25 * Microliter}\n     \t\t\t}\n    \t\t}\n   \t},\n \tAliquotAmount -> {{50 * Microliter, 50 * Microliter}},\n \tAliquotContainer ->\n  Model[Container, Plate, \"96-well 2mL Deep Well Plate\"]\n ]\n\nPreferred Input Containers\nThe ViiA 7 accepts MicroAmp EnduraPlate optical 384-well clear reaction plates.\nThe Uncle accepts capillary strips.\n\n[end context 1]\n\nHere are summaries of the previous meetings:\n\n[begin summary 1]\n\n### Comprehensive Protocol for Peptide Synthesis and Validation\n\nThis protocol integrates the best components from previous summaries to ensure a detailed, efficient, and scientifically rigorous approach to peptide synthesis and validation, aligned with the project's goals and constraints.\n\n---\n\n### Peptide Synthesis Protocol\n\n#### Step 1: Solid-Phase Peptide Synthesis (SPPS)\n- **Experiment**: `ExperimentPeptideSynthesis`\n- **Inputs**: \n  - Fmoc-protected amino acids: 0.1 M in NMP, stored at 4\u00b0C\n  - Rink amide resin: 1 g, 0.1 mmol/g loading capacity\n  - Coupling reagents: HBTU (0.1 M in DMF), DIPEA (2 M in NMP)\n  - Deprotection agent: 20% piperidine in DMF, freshly prepared\n- **Equipment**: \n  - Automated peptide synthesizer, calibrated for accurate volume delivery\n- **Conditions**: \n  - Resin swelling in DMF for 30 minutes\n  - Coupling: 5 mL amino acid solution, 5 mL HBTU, 2 mL DIPEA, stir for 60 minutes\n  - Deprotection: 10 mL of 20% piperidine in DMF for 20 minutes, repeated\n  - Washing: Three washes with 10 mL DMF after each step\n- **Output**: Peptide-resin with confirmed coupling efficiency via HPLC\n\n**Quality Control**:\n- **Coupling Check**: Perform Kaiser test after each coupling step\n- **Documentation**: Record reagent batch numbers, conditions, and deviations\n\n#### Step 2: Cleavage and Deprotection\n- **Experiment**: `ExperimentCleavage`\n- **Inputs**:\n  - Cleavage cocktail: TFA:water:triisopropylsilane:ethyl methyl sulfide (95:2.5:1:1.5), 10 mL per gram of resin\n- **Conditions**: \n  - Cleavage at room temperature for 2-3 hours\n- **Output**: Crude peptide in solution\n\n#### Step 3: Purification\n- **Experiment**: `ExperimentSolidPhaseExtraction` and `ExperimentHPLC`\n- **Inputs**: \n  - Crude peptide solution\n  - Solvent system: 0.1% TFA in acetonitrile-water gradient\n- **Equipment**: \n  - SPE apparatus and HPLC system with C18 column\n- **Conditions**: \n  - SPE: Gradient from 5% to 95% acetonitrile over 30 minutes\n  - HPLC: Flow rate 1 mL/min, UV detection at 214 nm\n- **Output**: Purified peptide >90% purity\n\n#### Step 4: Mass Confirmation\n- **Experiment**: `ExperimentLCMS`\n- **Inputs**: \n  - Purified peptide\n- **Equipment**: \n  - LC-MS system\n- **Conditions**: \n  - Standard LCMS settings for peptide analysis\n- **Output**: Confirmed molecular weight and sequence identity\n\n#### Step 5: Chemical Modifications\n- **Experiment**: `ExperimentBioconjugation`\n- **Inputs**: \n  - Purified peptide (0.4 mmol)\n  - PEG reagent (0.48 mmol)\n- **Conditions**: \n  - Room temperature, stirring for 2 hours in PBS\n- **Output**: Modified peptide, confirmed by MS\n\n### Peptide Validation Protocol\n\n#### Structural Validation\n- **Experiment**: `ExperimentNMR` and `ExperimentCircularDichroism`\n- **Inputs**: \n  - PEGylated peptide\n  - PBS buffer (pH 7.4)\n- **Equipment**: \n  - NMR spectrometer and CD spectrometer\n- **Conditions**: \n  - NMR: Proton and COSY 2D in DMSO-d6\n  - CD: 190-260 nm at 25\u00b0C\n- **Output**: Structural integrity and secondary structure confirmation\n\n#### Binding Validation\n- **Experiment**: `ExperimentBioLayerInterferometry` and `ExperimentFluorescencePolarization`\n- **Inputs**: \n  - PEGylated peptide\n  - Target protein: 1 mg/mL in PBS\n- **Equipment**: \n  - BLI instrument and fluorescence polarization reader\n- **Conditions**: \n  - BLI: Measure kinetics at peptide concentrations from 1 nM to 1 \u00b5M\n  - FP: Label peptide with FITC, measure binding across concentrations\n- **Output**: Binding affinity (expected KD <10 nM) and kinetic data\n\n#### Functional Validation\n- **Experiment**: `ExperimentELISA`\n- **Inputs**: \n  - PEGylated peptide\n  - HRP-conjugated secondary antibodies\n- **Equipment**: \n  - ELISA plate reader\n- **Conditions**: \n  - Standard ELISA protocol\n- **Output**: Quantitative binding data\n\n#### Stability Validation\n- **Experiment**: `ExperimentThermalShift`\n- **Inputs**: \n  - PEGylated peptide\n  - Sypro Orange dye\n- **Equipment**: \n  - Real-time PCR thermal cycler\n- **Conditions**: \n  - Heat and record fluorescence to determine melting temperature\n- **Output**: Thermal stability profile\n\n### Integration with Machine Learning Models\n\n- **Data Handling and Feedback**: Collect binding affinity, structural data, and stability profiles to feed back into machine learning models (ProteinMPNN and RFDiffusion). Use these data to refine predictions, focusing on recognized patterns or discrepancies.\n\n### Controls and Quality Assurance\n\n- **Control Samples**: Include non-modified peptides as negative controls and known active peptides as positive controls.\n- **Quality Assurance**: Implement checkpoints for purity (>90%) and identity verification using LCMS and HPLC. Document each step thoroughly.\n- **Sample Management**: Use barcoded sample tracking within ECL to ensure precise handling and accountability.\n\n### Data Management and Feedback Loop\n\n- **Data Management Tools**: Use platforms like AWS for data storage and management. Continuously integrate experimental data back into the machine learning models to refine predictions.\n- **Feedback Loop**: Regularly update models with new data, possibly weekly or bi-weekly, to enhance prediction accuracy and guide iterative peptide design.\n\n---\n\n### Explanation of Component Selection\n\n1. **Detailed Reagent Preparation and Equipment Use**: This was emphasized in summaries 2 and 5, ensuring precise conditions and reagent handling, which is critical for reproducibility and accuracy.\n\n2. **Integration with Machine Learning**: Summaries 3 and 4 highlighted the use of machine learning models like ProteinMPNN and RFDiffusion, which is crucial for aligning with the project's goal of scientifically impactful applications.\n\n3. **Quality Assurance and Controls**: Summaries 1 and 5 provided comprehensive quality control measures, ensuring that each step is validated and documented, which is essential for high clinical value and scientific rigor.\n\n4. **Data Management and Feedback Loop**: Summaries 4 and 5 focused on using AWS for data management and creating a feedback loop with machine learning models, ensuring continuous improvement and alignment with project goals.\n\nBy integrating these components, the protocol is robust, detailed, and aligned with the project's objectives, ensuring high clinical value and impactful scientific contributions.\n\n[end summary 1]\n\nHere is the agenda for the meeting:\n\nYou are working on a research project to use machine learning for drug discovery. Your goals are the following: (1) the project must have high clinical value, meaning the research contributes to helping patients, (2) the project must include a scientifically impactful application of machine learning to drug discovery, and (3) the project must use Emerald Cloud Labs (ECL) for all experimental validation with a 3-month limit on experiments. Your team previously decided to pursue peptide-based therapeutics. You previously designed experimental protocols for synthesis and validation of peptide-based therapeutics for a given protein drug target. Now you must implement one of these protocols using ECL. Please implement the ExperimentThermalShift protocol using the appropriate commands and syntax from ECL, writing out the experiment in the form ExperimentThermalShift[<options>] where you fill in <options> with the appropriate options. Please refer to the ECL documentation that is provided as context. In general, leave most options at their default values (and therefore do not specify them) except for those options that should be changed based on your specific experimental design. For every option that you do specify, please explain why you chose that value.\n\nMedicinal Chemist, please provide your response to the agenda."
    },
    {
        "agent": "Medicinal Chemist",
        "message": "To implement the `ExperimentThermalShift` protocol using Emerald Cloud Labs (ECL) for the validation of peptide-based therapeutics, we need to carefully select the options that align with our experimental design and objectives. Below is the proposed experiment setup, along with explanations for each specified option:\n\n### Experiment Setup\n\n```plaintext\nExperimentThermalShift[\n    mySamples,\n    Instrument -> Model[Instrument, MultimodeSpectrophotometer, \"Uncle\"],\n    NumberOfReplicates -> 3,\n    AnalyteType -> Protein,\n    ReactionVolume -> 25 * Microliter,\n    DetectionReagent -> Model[Sample, StockSolution, \"10X SYPRO Orange\"],\n    TemperatureRampRate -> (0.1 * Celsius / Second),\n    TemperatureRamping -> Linear,\n    MinTemperature -> (25 * Celsius),\n    MaxTemperature -> (95 * Celsius),\n    NumberOfCycles -> 1,\n    OptimizeFluorescenceLaserPower -> True,\n    DynamicLightScattering -> True,\n    DynamicLightScatteringMeasurements -> {Before, After},\n    DynamicLightScatteringMeasurementTemperatures -> {25 * Celsius, 95 * Celsius}\n]\n```\n\n### Explanation of Specified Options\n\n1. **Instrument**: \n   - **Value**: `Model[Instrument, MultimodeSpectrophotometer, \"Uncle\"]`\n   - **Reason**: The Uncle multimode spectrophotometer is chosen for its capability to measure both fluorescence and static light scattering, which is ideal for protein samples like peptides.\n\n2. **NumberOfReplicates**: \n   - **Value**: `3`\n   - **Reason**: To ensure statistical significance and reproducibility of the results, three replicates are used.\n\n3. **AnalyteType**: \n   - **Value**: `Protein`\n   - **Reason**: The analyte in this experiment is a peptide, which is a type of protein.\n\n4. **ReactionVolume**: \n   - **Value**: `25 * Microliter`\n   - **Reason**: This volume is sufficient for the Uncle instrument and allows for adequate mixing and detection.\n\n5. **DetectionReagent**: \n   - **Value**: `Model[Sample, StockSolution, \"10X SYPRO Orange\"]`\n   - **Reason**: SYPRO Orange is a common dye for protein thermal shift assays, providing reliable fluorescence signals for detecting melting transitions.\n\n6. **TemperatureRampRate**: \n   - **Value**: `(0.1 * Celsius / Second)`\n   - **Reason**: A moderate ramp rate ensures accurate detection of thermal transitions without overshooting the melting point.\n\n7. **TemperatureRamping**: \n   - **Value**: `Linear`\n   - **Reason**: Linear ramping is straightforward and effective for detecting melting points in thermal shift assays.\n\n8. **MinTemperature and MaxTemperature**: \n   - **Values**: `(25 * Celsius)` and `(95 * Celsius)`\n   - **Reason**: This range covers the expected melting temperatures of most peptides, ensuring the full transition is captured.\n\n9. **NumberOfCycles**: \n   - **Value**: `1`\n   - **Reason**: A single cycle is sufficient for initial melting point determination, reducing experiment time and complexity.\n\n10. **OptimizeFluorescenceLaserPower**: \n    - **Value**: `True`\n    - **Reason**: Optimizing laser power ensures the fluorescence signal is within the optimal detection range, enhancing data quality.\n\n11. **DynamicLightScattering**: \n    - **Value**: `True`\n    - **Reason**: DLS measurements provide additional data on peptide aggregation, which is crucial for understanding stability.\n\n12. **DynamicLightScatteringMeasurements**: \n    - **Value**: `{Before, After}`\n    - **Reason**: Measuring DLS both before and after the thermal ramp provides insights into changes in aggregation state.\n\n13. **DynamicLightScatteringMeasurementTemperatures**: \n    - **Values**: `{25 * Celsius, 95 * Celsius}`\n    - **Reason**: These temperatures correspond to the start and end of the thermal ramp, capturing any aggregation changes.\n\nThis setup is designed to efficiently validate the thermal stability and aggregation behavior of peptide-based therapeutics, aligning with our project's goals of high clinical value and scientific impact. The use of ECL ensures precise and reproducible experimental conditions, facilitating integration with machine learning models for drug discovery."
    }
]